# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "dev" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]

    env:
      # Define your environment variables here
      GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
      ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Build package
      run: |
        python -m pip install build
        python -m build

    - name: Install package
      run: |
        LATEST_WHL=$(ls dist/*.whl | sort -V | tail -n 1)
        python -m pip install "$LATEST_WHL"[full]

    - name: Run tests
      continue-on-error: true
      run: |
        pytest -v --junitxml=results.xml

    - name: Output test results for debugging
      run: |
        cat results.xml

    - name: Classify test results
      run: |
        python tests/classify_results.py results.xml
      continue-on-error: true

    - name: Proceed if no major failures
      if: ${{ success() }}
      run: echo "No major failures. Proceeding to the next step."

    - name: Fail if there are major failures
      if: ${{ failure() }}
      run: echo "Major failures detected. Failing the workflow."
      continue-on-error: false

    - name: Publish to PyPI
      if: success() && github.event_name == 'push' && startsWith(github.ref, 'refs/heads/dev')
      uses: pypa/gh-action-pypi-publish@v1.4.2
      with:
        user: cobycloud
        password: ${{ secrets.PYPI_API_TOKEN }}